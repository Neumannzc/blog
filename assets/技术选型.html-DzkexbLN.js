import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a,b as p,d as r,o as l}from"./app-BseF94sA.js";const n="/blog/assets/images/image-20221106185646994.png",o={};function s(c,e){return l(),i("div",null,[e[0]||(e[0]=a("p",null,"项目采用主流的前后端分离架构, 即后端使用java开发服务端, 前端使用vue/小程序开发前端页面",-1)),p(" more "),e[1]||(e[1]=r('<p><img src="'+n+'" alt="技术选型"></p><h2 id="_1-用户层" tabindex="-1"><a class="header-anchor" href="#_1-用户层"><span>1 用户层</span></a></h2><ul><li><p>H5: H5（HTML5）作为一种现代化的网页开发标准，可以在前端开发中实现丰富的交互效果和多媒体支持。它提供了语义化标签、本地存储、Canvas 绘图等功能，适用于构建响应式、跨平台的 Web 应用</p></li><li><p>Vue: Vue 作为一个轻量级、高性能、易上手的前端框架，可以在现代 Web 开发中实现组件化开发和数据驱动的视图渲染。它提供了响应式数据绑定、虚拟 DOM、路由管理等功能，适用于构建单页面应用（SPA）和复杂的前端项目</p></li><li><p>ElementUI: ElementUI 作为一个基于 Vue 的桌面端组件库，提供了丰富的 UI 组件和交互设计，可以快速构建美观、一致的企业级后台管理系统。它支持主题定制、国际化、表单验证等功能，极大地提升了开发效率</p></li><li><p>apache echarts: Apache ECharts 作为一个功能强大、灵活性高的数据可视化库，可以在前端开发中实现各种图表（如折线图、柱状图、饼图等）的绘制。它支持动态数据更新、交互式操作和丰富的配置选项，适用于数据分析和可视化展示</p></li><li><p>微信小程序: 微信小程序作为一种轻量级、即用即走的应用形式，可以在微信生态中实现快速开发和分发。它提供了丰富的 API 和组件，支持原生体验、离线能力和社交分享，适用于构建生活服务、电商等场景的应用</p></li></ul><h2 id="_2-网关层" tabindex="-1"><a class="header-anchor" href="#_2-网关层"><span>2 网关层</span></a></h2><p>管理端使用的是vue进行开发, 当管理端页面打包后将会以静态资源的方式存放在服务器当中, 为了使用者可以访问到这些页面, 同时为了实现反向代理和负载均衡, 在项目部署时, 采用nginx在网关层实现上述功能</p><h2 id="_3-应用层" tabindex="-1"><a class="header-anchor" href="#_3-应用层"><span>3 应用层</span></a></h2><ul><li><p>Spring Boot: Spring Boot作为基于Spring框架的Java应用程序的开源框架, 通过快速搭建项目和自动化配置提升了开发效率, 通过Starter依赖和依赖版本管理简化了依赖管理, 通过嵌入式服务器和独立运行实现了易于部署, 通过Actuator监控和安全管理保障了生产就绪, 通过提供默认的配置和自动化配置, 使开发者可以快速搭建和开发独立的、生产级别的Spring应用程序</p></li><li><p>Spring MVC: Spring MVC因为遵循MVC模式和组件化设计而有清晰的架构设计, 因为支持多种视图技术和可扩展性强而有强大的灵活性, 因为支持依赖注入和AOP支持以及事务管理而与Spring框架集成性良好, 同时拥有丰富的工具和社区支持, 在Spring框架中, 属于Web层实现的一个模块</p></li><li><p>Spring Task: Spring Task作为一个简单易用、灵活性高、稳定性强、可扩展性好的Spring框架中的人物调度框架, 可以基于Spring生态的情况下, 实现任务调度和管理</p></li><li><p>Httpclient: HttpClient 作为一个功能强大、灵活性高、支持多种协议（如 HTTP/HTTPS）的 Java HTTP 客户端库，可以在 Spring 生态中轻松实现 HTTP 请求的发送和响应处理。它提供了连接池管理、超时设置、重试机制等高级功能，适用于复杂的 HTTP 通信场景</p></li><li><p>Spring Cache: Spring Cache 作为一个简单易用、与 Spring 生态无缝集成的缓存抽象框架，可以基于注解（如 @Cacheable、@CacheEvict）实现方法级别的缓存管理。它支持多种缓存实现（如 Redis、Ehcache），并提供了灵活的缓存配置和失效策略，显著提升应用性能</p></li><li><p>JWT: JWT（JSON Web Token）作为一种轻量级、自包含、安全性高的身份验证和授权机制，可以在分布式系统中实现无状态的身份验证。它基于 JSON 格式，支持跨域认证，适用于前后端分离架构中的用户身份管理和权限控制</p></li><li><p>阿里云OSS: 阿里云 OSS（Object Storage Service）作为一个高可靠、高扩展、低成本的云存储服务，可以在 Spring 生态中实现文件的上传、下载和管理。它提供了丰富的 SDK 和 API，支持海量数据存储和高效访问，适用于图片、视频等静态资源的存储与分发</p></li><li><p>Swagger: Swagger 作为一个功能强大、易于集成的 API 文档生成工具，可以在 Spring 生态中自动生成 RESTful API 的交互式文档。它支持在线测试、参数描述、响应示例等功能，极大地提升了 API 的可读性和开发效率</p></li><li><p>POI: POI（Apache POI）作为一个功能丰富、支持多种格式（如 Excel、Word）的 Java 文档处理库，可以在 Spring 生态中实现 Office 文件的读写和操作。它提供了灵活的 API，适用于报表生成、数据导出等业务场景</p></li><li><p>WebSocket: WebSocket 作为一种全双工、低延迟的通信协议，可以在 Spring 生态中实现实时消息推送和双向通信。它基于 TCP 协议，适用于在线聊天、实时通知等需要高实时性的应用场景。Spring 提供了对 WebSocket 的全面支持，简化了开发流程</p></li></ul><h2 id="_4-数据层" tabindex="-1"><a class="header-anchor" href="#_4-数据层"><span>4 数据层</span></a></h2><ul><li><p>MySQL: MySQL 作为一个功能强大、性能优异、开源的关系型数据库管理系统，可以在 Spring 生态中实现数据的持久化存储和高效查询。它支持事务处理、复杂查询、索引优化等功能，适用于各种规模的应用场景，是 Spring 项目中常用的数据库解决方案</p></li><li><p>Redis: Redis 作为一个高性能、基于内存的键值存储系统，可以在 Spring 生态中实现缓存、会话管理和分布式锁等功能。它支持多种数据结构（如字符串、哈希、列表等），并提供了持久化、主从复制等高可用特性，显著提升应用的性能和扩展性</p></li><li><p>MyBatis: MyBatis 作为一个灵活、轻量级的持久层框架，可以在 Spring 生态中实现 SQL 与 Java 对象的映射。它通过 XML 或注解配置 SQL 语句，支持动态 SQL、缓存机制和插件扩展，适用于需要精细控制 SQL 的场景</p></li><li><p>PageHelper: PageHelper 作为一个简单易用、与 MyBatis 无缝集成的分页插件，可以在 Spring 生态中实现高效的数据分页查询。它通过简单的配置和 API，支持多种数据库的分页功能，极大地简化了分页逻辑的开发</p></li><li><p>Spring Data Redis: Spring Data Redis 作为一个与 Spring 生态深度集成的 Redis 操作框架，可以简化 Redis 的配置和操作。它提供了丰富的模板类和注解支持，支持连接池管理、序列化机制和事务处理，适用于需要高效操作 Redis 的场景</p></li></ul>',9))])}const d=t(o,[["render",s],["__file","技术选型.html.vue"]]),h=JSON.parse('{"path":"/posts/project/sky/%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B.html","title":"技术选型","lang":"zh-CN","frontmatter":{"title":"技术选型","date":"2025-02-18T00:00:00.000Z","icon":"dragon","category":["棠棠外卖"],"tag":["项目总结"],"order":102,"description":"项目采用主流的前后端分离架构, 即后端使用java开发服务端, 前端使用vue/小程序开发前端页面","head":[["meta",{"property":"og:url","content":"https://github.com/Neumannzc/blog/blog/posts/project/sky/%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Cafe Babe"}],["meta",{"property":"og:title","content":"技术选型"}],["meta",{"property":"og:description","content":"项目采用主流的前后端分离架构, 即后端使用java开发服务端, 前端使用vue/小程序开发前端页面"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/Neumannzc/blog/blog/assets/images/image-20221106185646994.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-27T13:21:51.000Z"}],["meta",{"property":"article:author","content":"Cafe Babe"}],["meta",{"property":"article:tag","content":"项目总结"}],["meta",{"property":"article:published_time","content":"2025-02-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-27T13:21:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"技术选型\\",\\"image\\":[\\"https://github.com/Neumannzc/blog/blog/assets/images/image-20221106185646994.png\\"],\\"datePublished\\":\\"2025-02-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-27T13:21:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cafe Babe\\",\\"url\\":\\"https://gitee.com/z517890027\\"}]}"]]},"headers":[{"level":2,"title":"1 用户层","slug":"_1-用户层","link":"#_1-用户层","children":[]},{"level":2,"title":"2 网关层","slug":"_2-网关层","link":"#_2-网关层","children":[]},{"level":2,"title":"3 应用层","slug":"_3-应用层","link":"#_3-应用层","children":[]},{"level":2,"title":"4 数据层","slug":"_4-数据层","link":"#_4-数据层","children":[]}],"git":{"createdTime":1740662511000,"updatedTime":1740662511000,"contributors":[{"name":"Cafe Babe","email":"517890027@qq.com","commits":1}]},"readingTime":{"minutes":6.22,"words":1866},"filePathRelative":"posts/project/sky/技术选型.md","localizedDate":"2025年2月18日","excerpt":"<p>项目采用主流的前后端分离架构, 即后端使用java开发服务端, 前端使用vue/小程序开发前端页面</p>\\n","autoDesc":true}');export{d as comp,h as data};
