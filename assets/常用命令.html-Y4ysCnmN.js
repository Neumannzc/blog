import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,b as t,d as p,o as l}from"./app-BB_GYvqu.js";const o={};function i(c,s){return l(),a("div",null,[s[0]||(s[0]=e("p",null,"记录了mysql中常用的语法",-1)),t(" more "),s[1]||(s[1]=p(`<h2 id="一、find-in-set" tabindex="-1"><a class="header-anchor" href="#一、find-in-set"><span>一、<code>FIND_IN_SET</code></span></a></h2><p><code>FIND_IN_SET()</code> 是 MySQL 中专门用于在逗号分隔的字符串中查找特定值的函数。它非常适合处理存储在单个字段中的逗号分隔值（CSV）数据。</p><h3 id="_1-基本语法" tabindex="-1"><a class="header-anchor" href="#_1-基本语法"><span>1 基本语法</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>FIND_IN_SET<span class="token punctuation">(</span>要查找的字符串<span class="token punctuation">,</span> 逗号分隔的字符串<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>函数特点 <ul><li>​​返回值​​： <ul><li>返回子串在逗号分隔列表中的位置（从1开始）</li><li>如果找不到则返回0</li><li>如果任一参数为NULL则返回NULL</li></ul></li><li>​​匹配规则​​： <ul><li>精确匹配整个元素（不是部分匹配）</li><li>区分大小写（除非使用不区分大小写的排序规则）</li><li>忽略元素前后的空格</li></ul></li></ul></li></ul><h3 id="_2-使用示例" tabindex="-1"><a class="header-anchor" href="#_2-使用示例"><span>2 使用示例</span></a></h3><h4 id="_1-基本使用" tabindex="-1"><a class="header-anchor" href="#_1-基本使用"><span>(1) 基本使用</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a,b,c,d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 返回2</span>
<span class="token keyword">SELECT</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a,b,c,d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 返回0</span>
<span class="token keyword">SELECT</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a, b, c,d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- 返回2（忽略空格）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-再-where-中使用" tabindex="-1"><a class="header-anchor" href="#_2-再-where-中使用"><span>(2) 再 WHERE 中使用</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 查找包含&quot;核心&quot;的记录</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products 
<span class="token keyword">WHERE</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;核心&#39;</span><span class="token punctuation">,</span> tags<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">-- 查找不包含&quot;复购&quot;的记录</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products 
<span class="token keyword">WHERE</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;复购&#39;</span><span class="token punctuation">,</span> tags<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">OR</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;复购&#39;</span><span class="token punctuation">,</span> tags<span class="token punctuation">)</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-与order-by-结合" tabindex="-1"><a class="header-anchor" href="#_3-与order-by-结合"><span>(3) 与ORDER BY 结合</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 让包含&quot;优先&quot;的记录排在前面</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> items 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token string">&#39;优先&#39;</span><span class="token punctuation">,</span> flags<span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-注意事项" tabindex="-1"><a class="header-anchor" href="#_3-注意事项"><span>3 注意事项</span></a></h3><ul><li>​​性能问题​​： <ul><li>FIND_IN_SET() 不能使用索引，在大表上性能较差</li><li>对于频繁查询的字段，应考虑规范化设计（使用关联表）</li></ul></li><li>​​数据一致性​​： <ul><li>无法强制引用完整性</li><li>难以维护数据一致性</li></ul></li><li>​​替代方案​​： <ul><li>对于MySQL 8.0+，可以考虑使用JSON类型代替逗号分隔字符串</li><li>对于复杂查询，应使用关联表设计</li></ul></li></ul><h2 id="二、json" tabindex="-1"><a class="header-anchor" href="#二、json"><span>二、<code>JSON</code></span></a></h2><p>在 MySQL 8.0 及以上版本中，使用 JSON 类型存储原本用逗号分隔的数据是更现代、更强大的解决方案。</p><h3 id="_1-表结构设计变更" tabindex="-1"><a class="header-anchor" href="#_1-表结构设计变更"><span>1 表结构设计变更</span></a></h3><p><strong>原结构</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> products <span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    tags <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token comment">-- 存储如 &quot;核心,复购,VIP&quot; 的逗号分隔值</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>新结构</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> products <span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    tags JSON  <span class="token comment">-- 存储JSON数组</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-数据迁移" tabindex="-1"><a class="header-anchor" href="#_2-数据迁移"><span>2 数据迁移</span></a></h3><p>将现有逗号分割数据转换为 JSON</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> products 
<span class="token keyword">SET</span> tags <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;[&quot;&#39;</span><span class="token punctuation">,</span> <span class="token keyword">REPLACE</span><span class="token punctuation">(</span>tags<span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;,&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-基本操作" tabindex="-1"><a class="header-anchor" href="#_3-基本操作"><span>3 基本操作</span></a></h3><p><strong>插入JSON数组数据</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> products <span class="token punctuation">(</span>name<span class="token punctuation">,</span> tags<span class="token punctuation">)</span> 
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;产品A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;[&quot;核心&quot;, &quot;复购&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查询包含特定标签的产品</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 查找包含&quot;核心&quot;标签的产品</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products 
<span class="token keyword">WHERE</span> JSON_CONTAINS<span class="token punctuation">(</span>tags<span class="token punctuation">,</span> <span class="token string">&#39;&quot;核心&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>添加新标签</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> products 
<span class="token keyword">SET</span> tags <span class="token operator">=</span> JSON_ARRAY_APPEND<span class="token punctuation">(</span>tags<span class="token punctuation">,</span> <span class="token string">&#39;$&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;VIP&#39;</span><span class="token punctuation">)</span> 
<span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>移除标签</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> products 
<span class="token keyword">SET</span> tags <span class="token operator">=</span> JSON_REMOVE<span class="token punctuation">(</span>
    tags<span class="token punctuation">,</span>
    JSON_UNQUOTE<span class="token punctuation">(</span>
        JSON_SEARCH<span class="token punctuation">(</span>tags<span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;复购&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-高级操作" tabindex="-1"><a class="header-anchor" href="#_4-高级操作"><span>4 高级操作</span></a></h3><p><strong>查询标签数量</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> JSON_LENGTH<span class="token punctuation">(</span>tags<span class="token punctuation">)</span> <span class="token keyword">AS</span> tag_count 
<span class="token keyword">FROM</span> products<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查询同时包含多个标签</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products 
<span class="token keyword">WHERE</span> JSON_CONTAINS<span class="token punctuation">(</span>tags<span class="token punctuation">,</span> <span class="token string">&#39;[&quot;核心&quot;, &quot;复购&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>展开JSON数组为多行</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> p<span class="token punctuation">.</span>id<span class="token punctuation">,</span> p<span class="token punctuation">.</span>name<span class="token punctuation">,</span> j<span class="token punctuation">.</span>tag
<span class="token keyword">FROM</span> products p<span class="token punctuation">,</span>
     JSON_TABLE<span class="token punctuation">(</span>p<span class="token punctuation">.</span>tags<span class="token punctuation">,</span> <span class="token string">&#39;$[*]&#39;</span> <span class="token keyword">COLUMNS</span> <span class="token punctuation">(</span>
         tag <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> PATH <span class="token string">&#39;$&#39;</span>
     <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> j<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-索引优化" tabindex="-1"><a class="header-anchor" href="#_5-索引优化"><span>5 索引优化</span></a></h3><p><strong>创建虚拟列并添加索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> products 
<span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> has_core_tag <span class="token keyword">TINYINT</span> GENERATED ALWAYS <span class="token keyword">AS</span> <span class="token punctuation">(</span>JSON_CONTAINS<span class="token punctuation">(</span>tags<span class="token punctuation">,</span> <span class="token string">&#39;&quot;核心&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> VIRTUAL<span class="token punctuation">,</span>
<span class="token keyword">ADD</span> <span class="token keyword">INDEX</span> <span class="token punctuation">(</span>has_core_tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>多值索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_tags <span class="token keyword">ON</span> products<span class="token punctuation">(</span><span class="token punctuation">(</span>CAST<span class="token punctuation">(</span>tags <span class="token keyword">AS</span> <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-优势对比" tabindex="-1"><a class="header-anchor" href="#_6-优势对比"><span>6 优势对比</span></a></h3><table><thead><tr><th>特性</th><th>逗号分隔字符串</th><th>JSON类型</th></tr></thead><tbody><tr><td>查询特定值</td><td>使用FIND_IN_SET</td><td>JSON_CONTAINS</td></tr><tr><td>复杂查询能力</td><td>有限</td><td>强大</td></tr><tr><td>数据完整性</td><td>无</td><td>部分保证</td></tr><tr><td>索引支持</td><td>无</td><td>有</td></tr><tr><td>修改单个元素</td><td>困难</td><td>容易</td></tr><tr><td>存储空间</td><td>较小</td><td>较大</td></tr></tbody></table><h3 id="_7-注意事项" tabindex="-1"><a class="header-anchor" href="#_7-注意事项"><span>7 注意事项</span></a></h3><ul><li><p>​​性能考虑​​：虽然JSON操作比FIND_IN_SET高效，但仍不如规范化设计的关联表</p></li><li><p>​​数据验证​​：MySQL对JSON数据有基本验证，但不会验证业务规则</p></li><li><p>​​版本兼容​​：确保所有环境使用MySQL 8.0+ ​</p></li><li><p>文档大小​​：JSON文档大小不能超过max_allowed_packet设置</p></li></ul>`,49))])}const r=n(o,[["render",i],["__file","常用命令.html.vue"]]),k=JSON.parse('{"path":"/posts/sql/mysql/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html","title":"常用命令","lang":"zh-CN","frontmatter":{"title":"常用命令","date":"2024-05-10T00:00:00.000Z","icon":"snowman","category":["mysql"],"tag":["数据库语法"],"order":106,"description":"记录了mysql中常用的语法","head":[["meta",{"property":"og:url","content":"https://github.com/Neumannzc/blog/blog/posts/sql/mysql/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"Cafe Babe"}],["meta",{"property":"og:title","content":"常用命令"}],["meta",{"property":"og:description","content":"记录了mysql中常用的语法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-15T07:52:56.000Z"}],["meta",{"property":"article:author","content":"Cafe Babe"}],["meta",{"property":"article:tag","content":"数据库语法"}],["meta",{"property":"article:published_time","content":"2024-05-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-15T07:52:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-15T07:52:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cafe Babe\\",\\"url\\":\\"https://gitee.com/z517890027\\"}]}"]]},"headers":[{"level":2,"title":"一、FIND_IN_SET","slug":"一、find-in-set","link":"#一、find-in-set","children":[{"level":3,"title":"1 基本语法","slug":"_1-基本语法","link":"#_1-基本语法","children":[]},{"level":3,"title":"2 使用示例","slug":"_2-使用示例","link":"#_2-使用示例","children":[]},{"level":3,"title":"3 注意事项","slug":"_3-注意事项","link":"#_3-注意事项","children":[]}]},{"level":2,"title":"二、JSON","slug":"二、json","link":"#二、json","children":[{"level":3,"title":"1 表结构设计变更","slug":"_1-表结构设计变更","link":"#_1-表结构设计变更","children":[]},{"level":3,"title":"2 数据迁移","slug":"_2-数据迁移","link":"#_2-数据迁移","children":[]},{"level":3,"title":"3 基本操作","slug":"_3-基本操作","link":"#_3-基本操作","children":[]},{"level":3,"title":"4 高级操作","slug":"_4-高级操作","link":"#_4-高级操作","children":[]},{"level":3,"title":"5 索引优化","slug":"_5-索引优化","link":"#_5-索引优化","children":[]},{"level":3,"title":"6 优势对比","slug":"_6-优势对比","link":"#_6-优势对比","children":[]},{"level":3,"title":"7 注意事项","slug":"_7-注意事项","link":"#_7-注意事项","children":[]}]}],"git":{"createdTime":1744703576000,"updatedTime":1744703576000,"contributors":[{"name":"Cafe Babe","email":"517890027@qq.com","commits":1}]},"readingTime":{"minutes":3.08,"words":924},"filePathRelative":"posts/sql/mysql/常用命令.md","localizedDate":"2024年5月10日","excerpt":"<p>记录了mysql中常用的语法</p>\\n","autoDesc":true}');export{r as comp,k as data};
