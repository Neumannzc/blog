import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,a as s,b as l,d as e,e as a,f as p,r as u,o as i}from"./app-nWwuVS9F.js";const k={},r={href:"https://poi.apache.org/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://deepoove.com/poi-tl/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://poi.apache.org/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://gitee.com/hgl168918/poi-tl",target:"_blank",rel:"noopener noreferrer"},g={href:"https://deepoove.com/poi-tl/apache-poi-guide.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://deepoove.com/poi-tl/",target:"_blank",rel:"noopener noreferrer"};function f(w,n){const t=u("ExternalLinkIcon");return i(),c("div",null,[n[24]||(n[24]=s("p",null,"想要对 Microsoft 进行操作，想要对 word 进行操作，那你可得看看这篇文章了",-1)),l(" more "),s("p",null,[s("a",r,[n[0]||(n[0]=a("poi")),p(t)]),n[1]||(n[1]=a(" 知道吧，Apache 出品的对 Microsoft 进行操作的 Java API 🤓"))]),n[25]||(n[25]=s("p",null,"但是你想使用它对具体的文档进行操作时，简直令人头疼 😵‍💫",-1)),n[26]||(n[26]=s("ul",null,[s("li",null,"文本不在表格中 和 文本在表格中，需要分别处理"),s("li",null,"文档处理结束后，即使有未处理的占位符，也不会清空，需要手动清空")],-1)),s("p",null,[n[3]||(n[3]=a("但是你要是使用 ")),s("a",d,[n[2]||(n[2]=a("poi-tl")),p(t)]),n[4]||(n[4]=a(" 就不一样了，那可真是小母牛坐飞机了 🥳"))]),n[27]||(n[27]=s("ul",null,[s("li",null,"在文档中填充文字、图片、表格"),s("li",null,"隐藏某些内容"),s("li",null,"把某些内容进行循环渲染")],-1)),n[28]||(n[28]=s("p",null,"多的不说了，咱就以操作word文档为例，直接上代码吧，大家自行进行比较 🤪",-1)),n[29]||(n[29]=s("h2",{id:"一、使用-poi-对word进行填充",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#一、使用-poi-对word进行填充"},[s("span",null,"一、使用 poi 对word进行填充")])],-1)),n[30]||(n[30]=s("h3",{id:"_1-1、引入依赖",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-1、引入依赖"},[s("span",null,"1.1、引入依赖")])],-1)),s("p",null,[n[6]||(n[6]=a("具体版本号，可以去官网获取最新的 ")),s("a",m,[n[5]||(n[5]=a("poi官网")),p(t)])]),n[31]||(n[31]=e(`<p>额，下面这段代码呢，直接在项目中cv过来的，主要是展示下实现填充的代码量 🙄</p><p>在填充时，直接填充文本 和 填充的文本在表格中 这两种情况，需要分别处理（也可以是我没有深入研究吧，如果大家有好的写法的话，可以给我发邮件啊）</p><p>要是想要深入了解其原理的话，可以研究下</p><p>but 只是使用的话，还是直接看 poi-tl 的使用吧，节约时间 摸🐡 不香吗</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>  <span class="token comment">&lt;!--            操作word文档    --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${poi.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="_1-2、填充文字" tabindex="-1"><a class="header-anchor" href="#_1-2、填充文字"><span>1.2、填充文字</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">fillText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 需要填充的数据</span>
  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dataMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  dataMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;达拉崩巴斑得贝迪卜多比鲁翁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">FileInputStream</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>tempFile<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">XWPFDocument</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 替换文档中的文字</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> paragraph <span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">replaceInParagraph</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">,</span> dataMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 替换表格中的文字</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTable</span> table <span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getTables</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableRow</span> row <span class="token operator">:</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> cell <span class="token operator">:</span> row<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> paragraph <span class="token operator">:</span> cell<span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token function">replaceInParagraph</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">,</span> dataMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">replaceInParagraph</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> paragraph<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dataMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFRun</span> run <span class="token operator">:</span> paragraph<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> text <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>text <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> dataMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> key <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">String</span> value <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\${&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3、填充图片" tabindex="-1"><a class="header-anchor" href="#_1-3、填充图片"><span>1.3、填充图片</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">fillText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 需要填充的数据</span>
  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dataMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  dataMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://img2.baidu.com/it/u=702352376,2051235826&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=1280&amp;h=800&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">FileInputStream</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>tempFile<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">XWPFDocument</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 替换文本中的图片</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> paragraph <span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">replaceImage</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">,</span> dataMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 替换表格中的图片</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTable</span> table <span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getTables</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableRow</span> row <span class="token operator">:</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> cell <span class="token operator">:</span> row<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> paragraph <span class="token operator">:</span> cell<span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token function">replaceImage</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">,</span> dataMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 替换图片</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">replaceImage</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> paragraph<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dataMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> key<span class="token punctuation">,</span> value<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFRun</span> run <span class="token operator">:</span> paragraph<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> text <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>text <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> dataMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                key <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                value <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                                <span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> value<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token class-name">DevFileUploadPathUtil</span><span class="token punctuation">.</span><span class="token function">getUploadPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> imagePaths <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                            <span class="token comment">// 是否替换占位符</span>
                            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> path <span class="token operator">:</span> imagePaths<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
                                <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

                                <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token class-name">DevFileUploadPathUtil</span><span class="token punctuation">.</span><span class="token function">getUploadPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token class-name">Image</span> image <span class="token operator">=</span> <span class="token class-name">ImgUtil</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    width <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    height <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;填充word文件，图片地址 = &quot;</span> <span class="token operator">+</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">createGet</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    inputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">bodyStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>

                                run<span class="token punctuation">.</span><span class="token function">addPicture</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_PNG</span><span class="token punctuation">,</span>
                                        value<span class="token punctuation">,</span> <span class="token class-name">Units</span><span class="token punctuation">.</span><span class="token function">toEMU</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Units</span><span class="token punctuation">.</span><span class="token function">toEMU</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调整图片大小</span>
                            <span class="token punctuation">}</span>
                            <span class="token comment">// 清空占位符</span>
                            run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CommonException</span><span class="token punctuation">(</span><span class="token string">&quot;填充图片失败，&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、使用-poi-tl-对word进行填充" tabindex="-1"><a class="header-anchor" href="#二、使用-poi-tl-对word进行填充"><span>二、使用 poi-tl 对word进行填充</span></a></h2>`,10)),s("p",null,[n[8]||(n[8]=a("大家可以先去 ")),s("a",v,[n[7]||(n[7]=a("poi-tl 的 git仓库")),p(t)]),n[9]||(n[9]=a(" 看下 poi-tl 是如何介绍自己的吧"))]),n[32]||(n[32]=e('<p>当然为了方便阅读，这里摘出来一部分</p><ul><li><p>Word 模板引擎，基于Apache POI - the Java API for Microsoft Documents。</p></li><li><p>FreeMarker、Velocity基于文本模板和数据生成新的HTML页面、配置文件等，poi-tl是Word模板引擎，基于Microsoft Word模板和数据生成新的文档。</p></li><li><p>Word模板拥有丰富的样式，poi-tl在生成的文档中会完美保留模板中的样式，还可以为标签设置样式，标签的样式会被应用到替换后的文本上，因此你可以专注于模板设计。</p></li><li><p>poi-tl是一种 &quot;logic-less&quot; 模板引擎，没有复杂的控制结构和变量赋值，只有标签，一些标签可以被替换为文本、图片、表格等，一些标签会隐藏某些文档内容，而另一些标签则会将一系列文档内容循环渲染。</p></li></ul><p>额，可能文字有点多，还是用它自己的话总结下吧</p><p><strong>poi-tl支持自定义渲染函数(插件)，函数可以在Word模板的任何位置执行，在文档的任何地方做任何事情（Do Anything Anywhere）是poi-tl的星辰大海</strong></p><h3 id="_2-1、操作word文档方案的对比" tabindex="-1"><a class="header-anchor" href="#_2-1、操作word文档方案的对比"><span>2.1、操作word文档方案的对比</span></a></h3><p>这个对比也是从它官网直接 cv 过来的，毕竟咱也不是做评测的，它只要能够帮咱快速的完成工作，让咱有充足的时间<strong>摸鱼</strong>就行啊</p><p>要是有需求它实现不了，那再去找嘛，不用纠结这些</p>',7)),s("table",null,[n[20]||(n[20]=s("thead",null,[s("tr",null,[s("th",null,"方案"),s("th",null,"移植性"),s("th",null,"功能性"),s("th",null,"易用性")])],-1)),s("tbody",null,[n[15]||(n[15]=s("tr",null,[s("td",null,"Poi-tl"),s("td",null,"Java跨平台"),s("td",null,"Word模板引擎，基于Apache POI，提供更友好的API"),s("td",null,"低代码，准备文档模板和数据即可")],-1)),s("tr",null,[n[12]||(n[12]=s("td",null,"Apache POI",-1)),n[13]||(n[13]=s("td",null,"Java跨平台",-1)),n[14]||(n[14]=s("td",null,"Apache项目，封装了常见的文档操作，也可以操作底层XML结构",-1)),s("td",null,[n[11]||(n[11]=a("文档不全，这里有一个教程：")),s("a",g,[n[10]||(n[10]=a("Apache POI Word快速入门")),p(t)])])]),n[16]||(n[16]=s("tr",null,[s("td",null,"Freemarker"),s("td",null,"XML跨平台"),s("td",null,"仅支持文本，很大的局限性"),s("td",null,"不推荐，XML结构的代码几乎无法维护")],-1)),n[17]||(n[17]=s("tr",null,[s("td",null,"OpenOffice"),s("td",null,"部署OpenOffice，移植性较差"),s("td",null,"-"),s("td",null,"需要了解OpenOffice的API")],-1)),n[18]||(n[18]=s("tr",null,[s("td",null,"HTML浏览器导出"),s("td",null,"依赖浏览器的实现，移植性较差"),s("td",null,"HTML不能很好的兼容Word的格式，样式糟糕"),s("td",null,"-")],-1)),n[19]||(n[19]=s("tr",null,[s("td",null,"Jacob、winlib"),s("td",null,"Windows平台"),s("td",null,"-"),s("td",null,"复杂，完全不推荐使用")],-1))])]),n[33]||(n[33]=s("h3",{id:"_2-2、poi-tl-具体功能",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-2、poi-tl-具体功能"},[s("span",null,"2.2、poi-tl 具体功能")])],-1)),s("p",null,[n[22]||(n[22]=a("反正按照它 ")),s("a",b,[n[21]||(n[21]=a("官网文档")),p(t)]),n[23]||(n[23]=a(" 上说的，它自己就是最好的"))]),n[34]||(n[34]=e(`<p>感觉这个牛吹的有点大的</p><p>咱来一起看看他具体有那些功能吧</p><table><thead><tr><th>Word模板引擎功能</th><th>描述</th></tr></thead><tbody><tr><td>文本</td><td>将标签渲染为文本</td></tr><tr><td>图片</td><td>将标签渲染为图片</td></tr><tr><td>表格</td><td>将标签渲染为表格</td></tr><tr><td>列表</td><td>将标签渲染为列表</td></tr><tr><td>图表</td><td>条形图（3D条形图）、柱形图（3D柱形图）、面积图（3D面积图）、折线图（3D折线图）、雷达图、饼图（3D饼图）、散点图等图表渲染</td></tr><tr><td>If Condition判断</td><td>根据条件隐藏或者显示某些文档内容（包括文本、段落、图片、表格、列表、图表等）</td></tr><tr><td>Foreach Loop循环</td><td>根据集合循环某些文档内容（包括文本、段落、图片、表格、列表、图表等）</td></tr><tr><td>Loop表格行</td><td>循环复制渲染表格的某一行</td></tr><tr><td>Loop表格列</td><td>循环复制渲染表格的某一列</td></tr><tr><td>Loop有序列表</td><td>支持有序列表的循环，同时支持多级列表</td></tr><tr><td>Highlight代码高亮</td><td>word中代码块高亮展示，支持26种语言和上百种着色样式</td></tr><tr><td>Markdown</td><td>将Markdown渲染为word文档</td></tr><tr><td>Word批注</td><td>完整的批注功能，创建批注、修改批注等</td></tr><tr><td>Word附件</td><td>Word中插入附件</td></tr><tr><td>SDT内容控件</td><td>内容控件内标签支持</td></tr><tr><td>Textbox文本框</td><td>文本框内标签支持</td></tr><tr><td>图片替换</td><td>将原有图片替换成另一张图片</td></tr><tr><td>书签、锚点、超链接</td><td>支持设置书签，文档内锚点和超链接功能</td></tr><tr><td>Expression Language</td><td>完全支持SpringEL表达式，可以扩展更多的表达式：OGNL, MVEL…​</td></tr><tr><td>样式</td><td>模板即样式，同时代码也可以设置样式</td></tr><tr><td>模板嵌套</td><td>模板包含子模板，子模板再包含子模板</td></tr><tr><td>合并</td><td>Word合并Merge，也可以在指定位置进行合并</td></tr><tr><td>用户自定义函数(插件)</td><td>插件化设计，在文档任何位置执行函数</td></tr></tbody></table><h3 id="_2-3、引入依赖" tabindex="-1"><a class="header-anchor" href="#_2-3、引入依赖"><span>2.3、引入依赖</span></a></h3><p>功能这么全的吗 😳</p><p>算了，咱啥也不说了，直接用吧</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.deepoove<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>poi-tl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${poi.tl.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="_2-4、填充文本" tabindex="-1"><a class="header-anchor" href="#_2-4、填充文本"><span>2.4、填充文本</span></a></h3><p>需要先在文档中相应的位置添加占位符 <code>{{text}}</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 填充文本 方法一
 * 需要填充的文件在 resource中
 *
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">fillText1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;行者孙&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;doc/test.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">File</span> file <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//创建输出流</span>
  <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;template1_out.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//最终编译渲染并输出</span>
  <span class="token class-name">XWPFTemplate</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeAndClose</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 填充文本 方法二
 * 需要填充的文件在本地
 *
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">fillText2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token string">&quot;/home/coffee/projects/person/demoProject/src/main/resources/doc/test.docx&quot;</span><span class="token punctuation">;</span>
  <span class="token class-name">XWPFTemplate</span> template <span class="token operator">=</span> <span class="token class-name">XWPFTemplate</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;行者孙&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  template<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
  template<span class="token punctuation">.</span><span class="token function">writeAndClose</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;template2_out.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5、填充图片" tabindex="-1"><a class="header-anchor" href="#_2-5、填充图片"><span>2.5、填充图片</span></a></h3><p>需要先在文档中相应的位置添加占位符 <code>{{@image}}</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 填充图片
 *
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">fillImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> imgUrl <span class="token operator">=</span> <span class="token string">&quot;https://img2.baidu.com/it/u=702352376,2051235826&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=1280&amp;h=800&quot;</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> imgPath <span class="token operator">=</span> <span class="token string">&quot;/home/coffee/图片/avatar.jpg&quot;</span><span class="token punctuation">;</span>

  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 图片url、path等</span>
  <span class="token comment">// 根据图片类型，直接使用 Pictures.ofXXX().create() 即可</span>
  params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Pictures</span><span class="token punctuation">.</span><span class="token function">ofUrl</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;doc/test.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">File</span> file <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//创建输出流</span>
  <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;template1_out.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//最终编译渲染并输出</span>
  <span class="token class-name">XWPFTemplate</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeAndClose</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6、创建表-填充数据" tabindex="-1"><a class="header-anchor" href="#_2-6、创建表-填充数据"><span>2.6、创建表，填充数据</span></a></h3><p>需要先在文档中相应的位置添加占位符 <code>{{#table}}</code></p><p>这个说的是把占位符替换成表格，不是在表格中填充文字哈，已经有表格了，需要填充文字的，属于填充文本</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 创建表格，并填充数据
 *
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">createTableAndFillData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

  <span class="token class-name">String</span> imgUrl <span class="token operator">=</span> <span class="token string">&quot;https://img2.baidu.com/it/u=702352376,2051235826&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=1280&amp;h=800&quot;</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> imgPath <span class="token operator">=</span> <span class="token string">&quot;/home/image/avatar.jpg&quot;</span><span class="token punctuation">;</span>

  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 表格</span>
  <span class="token class-name">RowRenderData</span> row0 <span class="token operator">=</span> <span class="token class-name">Rows</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;年龄&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;手机号&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;照片&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">textColor</span><span class="token punctuation">(</span><span class="token string">&quot;ffffff&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">bgColor</span><span class="token punctuation">(</span><span class="token string">&quot;444444&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">RowRenderData</span> row1 <span class="token operator">=</span> <span class="token class-name">Rows</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;20&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;13419817750&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">RowRenderData</span> row2 <span class="token operator">=</span> <span class="token class-name">Rows</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;jom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;17627178298&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 单元格插入图片</span>
  <span class="token class-name">PictureRenderData</span> pic1 <span class="token operator">=</span> <span class="token class-name">Pictures</span><span class="token punctuation">.</span><span class="token function">ofUrl</span><span class="token punctuation">(</span>imgUrl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  row1<span class="token punctuation">.</span><span class="token function">addCell</span><span class="token punctuation">(</span><span class="token class-name">Cells</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>pic1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">PictureRenderData</span> pic2 <span class="token operator">=</span> <span class="token class-name">Pictures</span><span class="token punctuation">.</span><span class="token function">ofStream</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>imgPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  row2<span class="token punctuation">.</span><span class="token function">addCell</span><span class="token punctuation">(</span><span class="token class-name">Cells</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>pic2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">TableRenderData</span> tableRenderData <span class="token operator">=</span> <span class="token class-name">Tables</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>row0<span class="token punctuation">,</span> row1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  tableRenderData<span class="token punctuation">.</span><span class="token function">addRow</span><span class="token punctuation">(</span>row2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;doc/test.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">File</span> file <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//创建输出流</span>
  <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;template1_out.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//最终编译渲染并输出</span>
  <span class="token class-name">XWPFTemplate</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeAndClose</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-7、循环填充-问答" tabindex="-1"><a class="header-anchor" href="#_2-7、循环填充-问答"><span>2.7、循环填充（问答）</span></a></h3><p>先看效果</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>问：第一个提问
答：第一个回答 
问：第二提问
答：第二回答 
问：第三提问
答：第三回答 
</code></pre></div><p>填充的模板中添加（如果想要 <strong>问答的内容</strong> 加下划线的话，直接在 <code>{{=#this}}</code> 的下方加上即可）</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>{{?list}}
{{?_is_even_item}}答：{{=#this}} {{/_is_even_item}}
{{?_is_odd_item }}问：{{=#this}} {{/_is_odd_item }}
{{/list}}
</code></pre></div><p>java中这样写</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">fillWord2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第一个提问&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第一个回答&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第二提问&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第二回答&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第三提问&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第三回答&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">XWPFTemplate</span> template <span class="token operator">=</span> <span class="token class-name">XWPFTemplate</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token constant">PATH</span> <span class="token operator">+</span> <span class="token string">&quot;test2.docx&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>

    template<span class="token punctuation">.</span><span class="token function">writeAndClose</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token constant">PATH</span> <span class="token operator">+</span> <span class="token string">&quot;output2.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-8、循环填充-列表" tabindex="-1"><a class="header-anchor" href="#_2-8、循环填充-列表"><span>2.8、循环填充（列表）</span></a></h3><p>先看效果</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>1. 第一个提问
2. 第一个回答
3. 第二提问
4. 第二回答
5. 第三提问
6. 第三回答
</code></pre></div><p>填充的模板中添加</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>{{?list}}
{{_index + 1}}. {{=#this}}
{{/list}}
</code></pre></div><p>java中这样写</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">fillWord2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第一个提问&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第一个回答&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第二提问&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第二回答&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第三提问&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;第三回答&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">XWPFTemplate</span> template <span class="token operator">=</span> <span class="token class-name">XWPFTemplate</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token constant">PATH</span> <span class="token operator">+</span> <span class="token string">&quot;test2.docx&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>

    template<span class="token punctuation">.</span><span class="token function">writeAndClose</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token constant">PATH</span> <span class="token operator">+</span> <span class="token string">&quot;output2.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-9、列表" tabindex="-1"><a class="header-anchor" href="#_2-9、列表"><span>2.9、列表</span></a></h3><p>效果这样的</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>1.第一个提问
2.第一个回答
3.第二提问
4.第二回答
5.第三提问
6.第三回答
</code></pre></div><p>填充的模板中添加</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>{{*list}}
</code></pre></div><p>java中这样写</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">fillWord4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

    <span class="token class-name">NumberingRenderData</span> renderData <span class="token operator">=</span> <span class="token class-name">Numberings</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">NumberingFormat</span><span class="token punctuation">.</span><span class="token constant">DECIMAL</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">&quot;第一个提问&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">&quot;第一个回答&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">&quot;第二提问&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">&quot;第二回答&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">&quot;第三提问&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">&quot;第三回答&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> renderData<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">XWPFTemplate</span> template <span class="token operator">=</span> <span class="token class-name">XWPFTemplate</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token constant">PATH</span> <span class="token operator">+</span> <span class="token string">&quot;test3.docx&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>

    template<span class="token punctuation">.</span><span class="token function">writeAndClose</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token constant">PATH</span> <span class="token operator">+</span> <span class="token string">&quot;output3.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38))])}const y=o(k,[["render",f],["__file","填充word.html.vue"]]),x=JSON.parse('{"path":"/posts/backend/%E5%A1%AB%E5%85%85word.html","title":"填充word","lang":"zh-CN","frontmatter":{"title":"填充word","date":"2024-05-25T00:00:00.000Z","icon":"dragon","category":["后端"],"tag":["开发示例"],"order":135,"description":"想要对 Microsoft 进行操作，想要对 word 进行操作，那你可得看看这篇文章了","head":[["meta",{"property":"og:url","content":"https://github.com/Neumannzc/blog/blog/posts/backend/%E5%A1%AB%E5%85%85word.html"}],["meta",{"property":"og:site_name","content":"Cafe Babe"}],["meta",{"property":"og:title","content":"填充word"}],["meta",{"property":"og:description","content":"想要对 Microsoft 进行操作，想要对 word 进行操作，那你可得看看这篇文章了"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T01:28:48.000Z"}],["meta",{"property":"article:author","content":"Cafe Babe"}],["meta",{"property":"article:tag","content":"开发示例"}],["meta",{"property":"article:published_time","content":"2024-05-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-27T01:28:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"填充word\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-27T01:28:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cafe Babe\\",\\"url\\":\\"https://gitee.com/z517890027\\"}]}"]]},"headers":[{"level":2,"title":"一、使用 poi 对word进行填充","slug":"一、使用-poi-对word进行填充","link":"#一、使用-poi-对word进行填充","children":[{"level":3,"title":"1.1、引入依赖","slug":"_1-1、引入依赖","link":"#_1-1、引入依赖","children":[]},{"level":3,"title":"1.2、填充文字","slug":"_1-2、填充文字","link":"#_1-2、填充文字","children":[]},{"level":3,"title":"1.3、填充图片","slug":"_1-3、填充图片","link":"#_1-3、填充图片","children":[]}]},{"level":2,"title":"二、使用 poi-tl 对word进行填充","slug":"二、使用-poi-tl-对word进行填充","link":"#二、使用-poi-tl-对word进行填充","children":[{"level":3,"title":"2.1、操作word文档方案的对比","slug":"_2-1、操作word文档方案的对比","link":"#_2-1、操作word文档方案的对比","children":[]},{"level":3,"title":"2.2、poi-tl 具体功能","slug":"_2-2、poi-tl-具体功能","link":"#_2-2、poi-tl-具体功能","children":[]},{"level":3,"title":"2.3、引入依赖","slug":"_2-3、引入依赖","link":"#_2-3、引入依赖","children":[]},{"level":3,"title":"2.4、填充文本","slug":"_2-4、填充文本","link":"#_2-4、填充文本","children":[]},{"level":3,"title":"2.5、填充图片","slug":"_2-5、填充图片","link":"#_2-5、填充图片","children":[]},{"level":3,"title":"2.6、创建表，填充数据","slug":"_2-6、创建表-填充数据","link":"#_2-6、创建表-填充数据","children":[]},{"level":3,"title":"2.7、循环填充（问答）","slug":"_2-7、循环填充-问答","link":"#_2-7、循环填充-问答","children":[]},{"level":3,"title":"2.8、循环填充（列表）","slug":"_2-8、循环填充-列表","link":"#_2-8、循环填充-列表","children":[]},{"level":3,"title":"2.9、列表","slug":"_2-9、列表","link":"#_2-9、列表","children":[]}]}],"git":{"createdTime":1716606512000,"updatedTime":1716773328000,"contributors":[{"name":"Cafe Babe","email":"517890027@qq.com","commits":3}]},"readingTime":{"minutes":9.65,"words":2895},"filePathRelative":"posts/backend/填充word.md","localizedDate":"2024年5月25日","excerpt":"<p>想要对 Microsoft 进行操作，想要对 word 进行操作，那你可得看看这篇文章了</p>\\n","autoDesc":true}');export{y as comp,x as data};
