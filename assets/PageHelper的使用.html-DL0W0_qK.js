import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e,a as t,f as p}from"./app-DT30k0-r.js";const o={},c=t("p",null,"PageHelper是一个查询列表时的自动分页工具",-1),l=p(`<h2 id="一、引入依赖" tabindex="-1"><a class="header-anchor" href="#一、引入依赖"><span>一、引入依赖</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>pagehelper<span class="token operator">-</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、持久层准备" tabindex="-1"><a class="header-anchor" href="#二、持久层准备"><span>二、持久层准备</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 分页查询全部订单</span>
<span class="token comment">// PageHelper框架是自动在sql语句后添加limit关键字实现分页的</span>
<span class="token comment">// 因为这个特性,我们编写的查询语句,和不分页时是一样的</span>
<span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select id,user_id,commodity_code,count,money from order_tbl&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Order</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAllOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、业务层使用" tabindex="-1"><a class="header-anchor" href="#三、业务层使用"><span>三、业务层使用</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 分页查询所有订单的方法</span>
<span class="token comment">// page 是页码</span>
<span class="token comment">// pageSize 是每页条数</span>
<span class="token keyword">public</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Order</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllOrdersByPage</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> page<span class="token punctuation">,</span><span class="token class-name">Integer</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// PageHepler框架实现分页最核心的代码就是在运行要分页的查询语句之前</span>
    <span class="token comment">// 通过框架给定的方法设置要分页查询的要求(第几页,每页多少条)</span>
    <span class="token comment">// 参数page和SpringData框架的设计不同,page为1就是第一页,page为2就是第二页</span>
    <span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 当上面设置完分页要求后,下面紧随的下一次查询,</span>
    <span class="token comment">// 就会自动在sql语句末尾添加limit关键字,limit后面的值就是按page,pageSize得出的</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Order</span><span class="token punctuation">&gt;</span></span> list<span class="token operator">=</span> orderMapper<span class="token punctuation">.</span><span class="token function">findAllOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// list并不是全部的订单的集合,而是按上面分页条件查询出的分页数据</span>
    <span class="token comment">// 在返回时不直接返回list对象,而是返回PageHelper框架提供的PageInfo类型对象</span>
    <span class="token comment">// 这个对象可以保存list集合的同时,还能自动计算分页信息</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function i(r,d){return a(),s("div",null,[c,e(" more "),l])}const k=n(o,[["render",i],["__file","PageHelper的使用.html.vue"]]),g=JSON.parse('{"path":"/posts/backend/PageHelper%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"PageHelper的使用","lang":"zh-CN","frontmatter":{"title":"PageHelper的使用","date":"2024-05-07T00:00:00.000Z","author":"Cafe Babe","category":["后端"],"tag":["分页工具"],"description":"PageHelper是一个查询列表时的自动分页工具","head":[["meta",{"property":"og:url","content":"https://github.com/Neumannzc/blog/blog/posts/backend/PageHelper%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"Cafe Babe"}],["meta",{"property":"og:title","content":"PageHelper的使用"}],["meta",{"property":"og:description","content":"PageHelper是一个查询列表时的自动分页工具"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-09T07:01:41.000Z"}],["meta",{"property":"article:author","content":"Cafe Babe"}],["meta",{"property":"article:tag","content":"分页工具"}],["meta",{"property":"article:published_time","content":"2024-05-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-09T07:01:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PageHelper的使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-09T07:01:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cafe Babe\\"}]}"]]},"headers":[{"level":2,"title":"一、引入依赖","slug":"一、引入依赖","link":"#一、引入依赖","children":[]},{"level":2,"title":"二、持久层准备","slug":"二、持久层准备","link":"#二、持久层准备","children":[]},{"level":2,"title":"三、业务层使用","slug":"三、业务层使用","link":"#三、业务层使用","children":[]}],"git":{"createdTime":1715238101000,"updatedTime":1715238101000,"contributors":[{"name":"Cafe Babe","email":"517890027@qq.com","commits":1}]},"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"posts/backend/PageHelper的使用.md","localizedDate":"2024年5月7日","excerpt":"<p>PageHelper是一个查询列表时的自动分页工具</p>\\n","autoDesc":true}');export{k as comp,g as data};
