import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,b as p,d as e,o}from"./app-BJPS0yVJ.js";const c={};function i(l,n){return o(),a("div",null,[n[0]||(n[0]=t("p",null,"Swagger接口文档, 是根据接口中的注解自动生成的接口文档, 避免了手动书写接口文档的大量缺点",-1)),p(" more "),n[1]||(n[1]=e(`<h2 id="_5-1-swagger文档的作用" tabindex="-1"><a class="header-anchor" href="#_5-1-swagger文档的作用"><span>5.1 Swagger文档的作用</span></a></h2><ul><li><p>自动化生成 API 文档 ​省去手动编写文档：通过注解直接从代码中提取接口信息（如路径、参数、响应），避免重复劳动。 ​实时同步：代码修改后，文档会自动更新，保持与代码的一致性。</p></li><li><p>提升团队协作效率 ​前后端对齐：前端开发者和后端开发者可以基于同一份文档沟通，减少因接口理解不一致导致的 bug。 ​新成员快速上手：新人通过阅读文档即可快速了解项目的 API 结构和功能。</p></li><li><p>方便接口测试与调试 ​Swagger UI 提供交互式界面：可以直接在页面中测试接口，发送请求并查看响应，无需手动拼接 URL 和参数。 ​自动生成测试用例：部分工具（如 Postman）可直接导入 Swagger JSON，生成测试集合。</p></li><li><p>降低维护成本 ​接口变更记录：文档清晰展示每个接口的功能、参数和版本变化，便于追溯和维护。 ​减少沟通成本：当接口发生变动时，只需更新代码中的注解，无需单独通知团队成员。</p></li><li><p>提高项目专业性 ​标准化输出：符合行业规范的 API 文档（如 OpenAPI 格式），提升项目可信度。 ​客户或上级查阅：非技术人员（如产品经理、客户）可通过可视化文档快速理解系统能力。</p></li><li><p>支持多种输出格式 ​Swagger UI：交互式 Web 页面（如 http://localhost:8080/swagger-ui.html）。 ​JSON/XML：导出为 v2/api-docs，可用于自动化测试或其他工具集成。 ​Markdown/PDF：通过插件生成静态文档，方便分享或存档。</p></li><li><p>生态系统支持 ​IDE 集成：IntelliJ IDEA、VS Code 等提供 Swagger 插件，支持代码内实时预览文档。 ​自动化测试框架：结合 Spring Boot Test 和 RestAssured，可直接基于 Swagger 定义测试用例。</p></li></ul><h2 id="_5-2-添加依赖" tabindex="-1"><a class="header-anchor" href="#_5-2-添加依赖"><span>5.2 添加依赖</span></a></h2><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-3-配置swagger" tabindex="-1"><a class="header-anchor" href="#_5-3-配置swagger"><span>5.3 配置Swagger</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token doc-comment comment">/**
 * 配置类，注册web层相关组件
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcConfiguration</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurationSupport</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 通过knife4j生成接口文档
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">docketAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ApiInfo</span> apiInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;棠棠外卖项目接口文档&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&quot;2.0&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;棠棠外卖管理端接口文档&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Docket</span> docket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">SWAGGER_2</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">&quot;管理端接口&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span>apiInfo<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">&quot;com.tt.controller.admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> docket<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 设置静态资源映射
     *
     * <span class="token keyword">@param</span> <span class="token parameter">registry</span>
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/doc.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:/META-INF/resources/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-4-注解说明" tabindex="-1"><a class="header-anchor" href="#_5-4-注解说明"><span>5.4 注解说明</span></a></h2><h3 id="_5-4-1-核心注解分类" tabindex="-1"><a class="header-anchor" href="#_5-4-1-核心注解分类"><span>5.4.1 核心注解分类</span></a></h3><ul><li>​类级别注解​</li></ul><table><thead><tr><th>注解类型</th><th>作用</th><th>使用场景</th></tr></thead><tbody><tr><td>@Api</td><td>描述整个控制器的作用</td><td>在 Controller 类上标注，定义 API 标签和描述。</td></tr><tr><td>@ApiOperation</td><td>描述单个接口的功能</td><td>在 Controller 的方法上标注，说明接口用途。</td></tr></tbody></table><ul><li>​方法级别注解​</li></ul><table><thead><tr><th>注解类型</th><th>作用</th><th>使用场景</th></tr></thead><tbody><tr><td>@ApiParam</td><td>描述请求参数（Query/Path/Body）</td><td>在方法参数上标注，定义参数名称、类型、是否必传等。</td></tr><tr><td>@ApiResponse</td><td>描述接口的响应结果</td><td>在方法上标注可能的响应状态码和消息。</td></tr><tr><td>@RequestBody</td><td>标记请求体参数</td><td>在方法参数上标注，表示参数来自请求体（JSON）。</td></tr></tbody></table><ul><li>​字段级别注解​</li></ul><table><thead><tr><th>注解类型</th><th>作用</th><th>使用场景</th></tr></thead><tbody><tr><td>@ApiModelProperty</td><td>描述实体类的字段</td><td>在实体类属性上标注，说明字段含义、格式、是否隐藏等。</td></tr></tbody></table><ul><li>​全局配置相关​</li></ul><table><thead><tr><th>注解类型</th><th>作用</th><th>使用场景</th></tr></thead><tbody><tr><td>@EnableSwagger2</td><td>启用 Swagger 支持</td><td>在配置类上标注，开启Swagger功能。</td></tr></tbody></table><h3 id="_5-4-2-详细注解说明" tabindex="-1"><a class="header-anchor" href="#_5-4-2-详细注解说明"><span>5.4.2 详细注解说明</span></a></h3><p>(1) @Api 注解</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;用户增删改查接口&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>​<strong>tags</strong>: 定义 API 的分类标签（如 &quot;用户管理&quot;）。</p></li><li><p>​<strong>description</strong>: 对 API 的简要描述。</p></li><li><p>​适用场景：为整个控制器生成分组标签，便于在 Swagger UI 中归类。</p></li></ul><p>(2) @ApiOperation 注解</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/page&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;分页查询用户列表&quot;</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">&quot;根据 pageNum 和 pageSize 分页获取用户数据&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>​<strong>value</strong>: 接口的简短描述（显示在接口列表中）。</p></li><li><p>​<strong>notes</strong>: 接口的详细描述（鼠标悬停时显示）。</p></li><li><p>​适用场景：描述接口的核心功能和业务逻辑。</p></li></ul><p>(3) @ApiParam 注解</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;根据ID查询用户&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUser</span><span class="token punctuation">(</span>
    <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;用户ID&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> 
    <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>​<strong>name</strong>: 参数名称。</p></li><li><p>​<strong>value</strong>: 参数描述。</p></li><li><p>​<strong>required</strong>: 是否必传（默认 false）。</p></li><li><p>​<strong>example</strong>: 参数示例值。</p></li><li><p>​适用场景：描述请求参数的详细信息（适用于 Query/Path/Body 参数）。</p></li></ul><p>(4) ​**@ApiResponse 注解**</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/add&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;新增用户&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiResponses</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;新增成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;参数非法&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;服务器错误&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>​<strong>code</strong>: HTTP 状态码。</p></li><li><p>​<strong>message</strong>: 对应状态码的描述。</p></li><li><p>​适用场景：定义接口可能的响应结果，增强文档的可读性。</p></li></ul><p>(5) ​**@ApiModelProperty 注解**</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;用户ID&quot;</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> hidden <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;用户名&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token comment">// 隐藏敏感字段</span>
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>hidden <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>​<strong>value</strong>: 字段描述。</p></li><li><p>​<strong>required</strong>: 字段是否必传（仅对 RequestBody 有效）。</p></li><li><p>​<strong>dataType</strong>: 字段数据类型（如 int, string, LocalDateTime）。</p></li><li><p>​<strong>hidden</strong>: 是否隐藏该字段（默认 false）。</p></li><li><p>​适用场景：描述实体类字段的元数据，控制文档中字段的显示。</p></li></ul><p>(6) ​<strong>其他常用注解</strong></p><table><thead><tr><th>注解</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td>@ApiImplicitParam</td><td>隐式参数描述（无需在方法参数中标注）</td><td>@ApiImplicitParams({@ApiImplicitParam(name = &quot;token&quot;, paramType = &quot;header&quot;)})</td></tr><tr><td>@RequestHeader</td><td>标记请求头参数</td><td>@RequestHeader(&quot;Authorization&quot;) String token</td></tr><tr><td>@PathVariable</td><td>标记路径变量</td><td>@GetMapping(&quot;/user/{id}&quot;)</td></tr><tr><td>@ResponseBody</td><td>强制将返回值转为 JSON</td><td>（通常省略，因 Spring Boot 默认支持）</td></tr></tbody></table><h3 id="_5-4-​3-组合使用示例" tabindex="-1"><a class="header-anchor" href="#_5-4-​3-组合使用示例"><span>5.4.​3 组合使用示例</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/api/v1/users&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;用户相关接口&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;获取用户列表&quot;</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">&quot;支持分页查询&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;当前页码&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">&quot;query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;size&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;每页数量&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">&quot;query&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUsers</span><span class="token punctuation">(</span>
        <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Integer</span> page<span class="token punctuation">,</span>
        <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Integer</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 业务逻辑...</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;创建用户&quot;</span><span class="token punctuation">,</span> response <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiResponses</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">201</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;用户创建成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;用户信息不合法&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">createUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Valid</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 业务逻辑...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36))])}const d=s(c,[["render",i],["__file","功能点五.html.vue"]]),k=JSON.parse('{"path":"/posts/project/sky/function/%E5%8A%9F%E8%83%BD%E7%82%B9%E4%BA%94.html","title":"5 Swagger接口文档","lang":"zh-CN","frontmatter":{"title":"5 Swagger接口文档","date":"2025-02-18T00:00:00.000Z","icon":"dragon","category":["棠棠外卖"],"tag":["项目总结"],"order":105,"description":"Swagger接口文档, 是根据接口中的注解自动生成的接口文档, 避免了手动书写接口文档的大量缺点","head":[["meta",{"property":"og:url","content":"https://github.com/Neumannzc/blog/blog/posts/project/sky/function/%E5%8A%9F%E8%83%BD%E7%82%B9%E4%BA%94.html"}],["meta",{"property":"og:site_name","content":"Cafe Babe"}],["meta",{"property":"og:title","content":"5 Swagger接口文档"}],["meta",{"property":"og:description","content":"Swagger接口文档, 是根据接口中的注解自动生成的接口文档, 避免了手动书写接口文档的大量缺点"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-27T13:21:51.000Z"}],["meta",{"property":"article:author","content":"Cafe Babe"}],["meta",{"property":"article:tag","content":"项目总结"}],["meta",{"property":"article:published_time","content":"2025-02-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-27T13:21:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5 Swagger接口文档\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-27T13:21:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cafe Babe\\",\\"url\\":\\"https://gitee.com/z517890027\\"}]}"]]},"headers":[{"level":2,"title":"5.1 Swagger文档的作用","slug":"_5-1-swagger文档的作用","link":"#_5-1-swagger文档的作用","children":[]},{"level":2,"title":"5.2 添加依赖","slug":"_5-2-添加依赖","link":"#_5-2-添加依赖","children":[]},{"level":2,"title":"5.3 配置Swagger","slug":"_5-3-配置swagger","link":"#_5-3-配置swagger","children":[]},{"level":2,"title":"5.4 注解说明","slug":"_5-4-注解说明","link":"#_5-4-注解说明","children":[{"level":3,"title":"5.4.1 核心注解分类","slug":"_5-4-1-核心注解分类","link":"#_5-4-1-核心注解分类","children":[]},{"level":3,"title":"5.4.2 详细注解说明","slug":"_5-4-2-详细注解说明","link":"#_5-4-2-详细注解说明","children":[]},{"level":3,"title":"5.4.​3 组合使用示例","slug":"_5-4-​3-组合使用示例","link":"#_5-4-​3-组合使用示例","children":[]}]}],"git":{"createdTime":1740662511000,"updatedTime":1740662511000,"contributors":[{"name":"Cafe Babe","email":"517890027@qq.com","commits":1}]},"readingTime":{"minutes":5.31,"words":1593},"filePathRelative":"posts/project/sky/function/功能点五.md","localizedDate":"2025年2月18日","excerpt":"<p>Swagger接口文档, 是根据接口中的注解自动生成的接口文档, 避免了手动书写接口文档的大量缺点</p>\\n","autoDesc":true}');export{d as comp,k as data};
